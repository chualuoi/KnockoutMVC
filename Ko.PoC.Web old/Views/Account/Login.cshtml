@using Ko.Mvc
@using Ko.Mvc.BindingAttributes
@inherits Ko.Mvc.KnockoutEnabledViewPage<Ko.PoC.Web.Models.LoginModel>
@{
    ViewBag.Title = "Log in";
}

<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
</hgroup>

<section id="loginForm">
    <h2>Use a local account to log in.</h2>
    @using (Html.BeginForm(new { ReturnUrl = ViewBag.ReturnUrl }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Log in Form</legend>
            <ol>
                <li>
                    @Html.LabelFor(m => m.UserName)
                    @Html.TextBoxFor(m => m.UserName).DataBind(Ko.Bind.Add<ValueBinding>(x=>x.UserName))
                    @Html.ValidationMessageFor(m => m.UserName)
                </li>
                <li>
                    @Html.LabelFor(m => m.Password)
                    @Html.PasswordFor(m => m.Password).DataBind(Ko.Bind.Add<ValueBinding>(x=>x.Password))
                    @Html.ValidationMessageFor(m => m.Password)
                </li>
                <li>
                    @Html.CheckBoxFor(m => m.RememberMe)
                    @Html.LabelFor(m => m.RememberMe, new { @class = "checkbox" })
                </li>
            </ol>
            <input type="submit" value="Log in" />
        </fieldset>
        <p>
            @Html.ActionLink("Register", "Register") if you don't have an account.
        </p>
    }
</section>

<section class="social" id="socialLoginForm">
    <h2>Use another service to log in.</h2>
    @Html.Action("ExternalLoginsList", new { ReturnUrl = ViewBag.ReturnUrl })
</section>

@section scripts
{
    <script src="~/Scripts/knockout-2.2.0.debug.js"></script>
    <script src="~/Scripts/knockout.validation.debug.js"></script>
    <script src="~/Scripts/knockout.validation.parseUnobtrusive.js"></script>
    <script type="text/javascript">
        LoginModel = function() {
            var self = this;
            self.UserName = ko.observable();
            self.Password = ko.observable();
            return self;
        };
        $(document).ready(function() {
            ko.validation.configure({
                registerExtenders: true,    //default is true
                messagesOnModified: true,   //default is true
                insertMessages: true,       //default is true
                parseInputAttributes: true, //default is false
                writeInputAttributes: true, //default is false
                messageTemplate: null,      //default is null
                decorateElement: true       //default is false. Applies the .validationElement CSS class
            });
            window.viewModel = ko.validatedObservable(new LoginModel());
            ko.applyBindings(viewModel);
        });
    </script>
}
